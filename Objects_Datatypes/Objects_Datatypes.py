# -*- coding: utf-8 -*-
"""21032_AishwaryaGupta_Objects_and_DataTypes.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17HAxyfdthk51U9_IAtASVrkemPdXa3Qk

Q.1 Iterate through the given list and create a new list that contains numbers divisible by 6. Also Sort the list obtained.
"""

listv=[7,2,12,35,48,6,15,60,14,24]
output=[]

# code to create a new list

# filter return the filtered list using the test condition provided by lambda (if x/ 6 gives remainder 0)
output=filter(lambda x: x%6==0,listv)
print(sorted(output))

    #expected output=[6,12,24,48,60]

"""Q.2 Write a Python script to generate and print a dictionary that contains a number (between 1 and n) in the form (x, x * x * x).
Sample Dictionary ( n = 3) :
Expected Output : {1: 1, 2: 8, 3: 27}
"""

#code to create a dictionary

#input from user
x=int(input("Number between 1 and n?"))
my_dict ={}

for i in range(1,x+1):
  #iterating from 1 to n
  my_dict.update({i:i*i*i})

print(my_dict)

"""Q.3 Create a new list which contains reverse of every string in given list.
eg. str_list=['hello','bye'] expected output=['olleh','eyb']
"""

#code to reverse each string in list

string1= ['today','is', 'a','good','day']
string2=[]

for x in string1:
  # count backwards
  string2.append(x[::-1])
print(string2)

# Alternate code
s=list(map(lambda x:"".join(reversed(x)),string1))
print(s)

"""Q.4 Write a code to convert the given tuple elements into one string. Note : Donot use any predefined funcions.
t=('Q','u','a','n','t','i','p','h','i')
Also create a list of unique characters of tuple.
"""

t=('Q','u','a','n','t','i','p','h','i')
strout=""
listout=[]
# code to create a string of all elements un tuple

for i in t:
  # append character to end of string
  strout=strout+i

# comprehension to add unique values to list
[listout.append(i) for i in t if i not in listout]

print(strout,listout)

"""Q.5 Write a Python program to print number of elements in list having string length as 4. Also print number of strings having same first and last character.
eg. input_list=['abr','cgcc','oudh','uiu','ytsy','poqw']
Expected Output: Number of strings with length 4 = 3
Number of strings having same first & last character = 3
"""

input_list=['abcc','aba','abba','cbac','bcb','aacb','bbc','ccc']
# code
n1=0
n2=0

for n in input_list:
  if len(n)==4: n1=n1+1
  if n[0]==n[-1]: n2=n2+1

print("Number of strings with length 4 = ",n1," Number of strings having same first & last character = ",n2)

# n1= #number of strings with length 4
# n2= #number of strings having same first & last character

"""Q.6 Write a program to generate sub list of a list.
eg l=['P','H','I'] Expected output: l1=[[],['P'],['H'],['I'],['P','H'],['H','I'],['P','I'],['P','H','I']]
"""

l=['P','H','I']
ans_list=[]

# your code
def power(l , index , subs):

    if index == len(l):
        ans_list.append([i for i in subs ])
        return

    power(l, index + 1, subs + l[index])
    power(l, index + 1, subs)

# index is of list l
index = 0
# subs stores current subset
subs=""

power(l, index , subs)

print(ans_list)
# ans_list= #expected output as a list

"""Q.7 Write a Python program to count the number of characters in a string. Go to the editor
Sample String : 'google.com'
Expected Result : {'o': 3, 'g': 2, '.': 1, 'e': 1, 'l': 1, 'm': 1, 'c': 1}
Note that number of spaces in string should not be included in dictionary.
"""

str1='Data science is to extract meaningful insights from data'
#your code
str1=str1.lower()
letters=[]
count=[]

#comprehension for appending letters to list that arent present in it and are not whitespace
[letters.append(x) for x in str1 if x not in letters and not x.isspace()]

#initialising count list to 0 and length of letter list
count=[0]*len(letters)

for ch in str1:
  if(not ch.isspace()):
    # increment number in count list at same index as of character in letter list
    count[letters.index(ch)]=count[letters.index(ch)]+1

# letter and count at corresponding index form key:value
ans_dict={letters[i]:count[i] for i in range(len(letters))}
print(ans_dict)