# -*- coding: utf-8 -*-
"""Deep CNN Model-Image Classification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VuC308OIWlrkPeYDiOPj0sGdgJt5OnRz
"""

# Commented out IPython magic to ensure Python compatibility.
import tensorflow as tf
# %load_ext tensorboard
import numpy as np
import pandas as pd
import os
from tensorflow import keras
from tensorflow.keras.layers import Dense, Conv2D, Flatten, Dropout, MaxPooling2D
import matplotlib

# os.chdir("D:\Datasets\deepsat-sat6")

from google.colab import drive
drive.mount('/content/gdrive')

root_path = 'gdrive/My Drive/BE_Datasets/deepsat-sat6/'
x_train = pd.read_csv(tf.io.gfile.GFile(root_path + 'X_train_sat6.csv',mode='r'),header=None)
y_train = pd.read_csv(tf.io.gfile.GFile(root_path + 'y_train_sat6.csv',mode='r'),header=None)
x_train = x_train.values.reshape(x_train.shape[0],28,28,4).astype(np.float32)
y_train = y_train.values.astype(np.float32)

x_eval = pd.read_csv(tf.io.gfile.GFile(root_path + 'X_test_sat6.csv',mode='r'),header=None)
y_eval = pd.read_csv(tf.io.gfile.GFile(root_path + 'y_test_sat6.csv',mode='r'),header=None)
x_eval = x_eval.values.reshape(x_eval.shape[0],28,28,4).astype(np.float32)
y_eval = y_eval.values.astype(np.float32)

model = keras.Sequential([
    Conv2D(16, 3, padding = 'same', activation = 'relu', input_shape=(28,28,4)),
    Conv2D(32, 3, padding = 'same', activation = 'relu'),
    MaxPooling2D(),
    Dropout(0.5),
    Conv2D(32, 3, padding = 'same', activation = 'relu'),
    MaxPooling2D(),
    Conv2D(64, 3, padding = 'same', activation = 'relu'),
    MaxPooling2D(),
    Dropout(0.5),
    Flatten(),
    Dense(512, activation = 'relu'),
    Dropout(0.5),
    Dense(6,activation = 'softmax')

])

model.compile(loss = 'categorical_crossentropy', optimizer = 'adam', metrics = ['accuracy'])

print(model.summary())

tensorboard_cb =  tf.keras.callbacks.TensorBoard(log_dir = './Graph/', histogram_freq = 1, write_graph = True, write_grads = True)
model.fit(x_train, y_train, batch_size = 512, epochs = 4, verbose = 1, validation_data=(x_eval,y_eval), callbacks = [tensorboard_cb])

model.save('gdrive/My Drive/BE_Datasets/LandscapeModel')
model.describe()

# tX, tY = pd.read_csv('D:\Datasets\deepsat-sat6\X_train_sat6.csv', 16)
from matplotlib import pyplot
print(x_train.shape, y_train.shape)
fig, m_axs = pyplot.subplots(4, x_train.shape[0]//4, figsize = (12, 12))
for (x, y, c_ax) in zip(tX, y_train, m_axs.flatten()):
    c_ax.imshow(x[:,:,:3],
                interpolation = 'none')
    c_ax.axis('off')
    c_ax.set_title('Cat:{}'.format(y))

